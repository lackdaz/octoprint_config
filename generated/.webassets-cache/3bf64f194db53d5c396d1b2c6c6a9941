V// source: plugin/telegram/js/telegram.js\u000a/*\u000a * View model for OctoPrint-Telegram\u000a *\u000a * Author: Fabian Schlenz\u000a * License: AGPLv3\u000a */\u000a$(function() {\u000a    function TelegramViewModel(parameters) {\u000a        var self = this;\u000a\u000a        // assign the injected parameters, e.g.:\u000a        // self.loginStateViewModel = parameters[0];\u000a        self.settings = parameters[0];\u000a        //else\u000a         //   self.settings=self.settings;\u000a        console.log(String(self.settings));\u000a\u000a        // TODO: Implement your plugin's view model here.\u000a        \u000a        self.chatListHelper = new ItemListHelper(\u000a            "known_chats",\u000a            {\u000a                "title": function(a, b) {\u000a                    if(a.title.toLocaleLowerCase() < b.title.toLocaleLowerCase()) return -1;\u000a                    if(a.title.toLocaleLowerCase() > b.title.toLocaleLowerCase()) return 1;\u000a                    return 0;\u000a                }\u000a            },\u000a            {},\u000a            "title",\u000a            [],\u000a            [],\u000a            999);\u000a\u000a        self.cmdCnt = 1;\u000a        self.msgCnt = 1;\u000a        self.reloadPending = 0;\u000a        self.reloadUsr = ko.observable(false);\u000a        self.connection_state_str = ko.observable("Unknown");\u000a        self.isloading = ko.observable(false);\u000a        self.errored = ko.observable(false);\u000a        self.token_state_str = ko.observable("Unknown");\u000a    	self.editChatDialog = undefined;  \u000a        self.varInfoDialog = undefined;      \u000a        self.emoInfoDialog = undefined;\u000a        self.mupInfoDialog = undefined;  \u000a    	self.currChatID = "Unknown";\u000a        self.currChatTitle = ko.observable("Unknown");\u000a        self.bind_cmd = {}; \u000a        self.markupFrom = [];\u000a        self.onBindLoad = false;\u000a    \u000a        self.requestData = function(ignore,update) {\u000a\u000a            ignore = typeof ignore !== 'undefined' ? ignore : false;\u000a            update = typeof update !== 'undefined' ? update : false;\u000a\u000a            if (update)\u000a                urlPath = "plugin/telegram?id="+self.currChatID+"&cmd="+$('#telegram-acccmd-chkbox-box').prop( "checked" )+"&note="+$('#telegram-notify-chkbox-box').prop( "checked" )+"&allow="+$('#telegram-user-allowed-chkbox-box').prop( "checked" );\u000a            else\u000a                urlPath = "plugin/telegram";\u000a            if(self.reloadUsr() || ignore){\u000a                self.isloading(true);\u000a                $.ajax({\u000a                    url: API_BASEURL + urlPath,\u000a                    type: "GET",\u000a                    dataType: "json",\u000a                    success: self.fromResponse\u000a                });\u000a                \u000a               if(!ignore) self.reloadPending = setTimeout(self.requestData,20000);\u000a            }\u000a            else\u000a                self.reloadPending = setTimeout(self.requestData,500);\u000a        };\u000a\u000a        self.requestBindings = function() {\u000a            self.isloading(true);\u000a            $.ajax({\u000a                url: API_BASEURL + "plugin/telegram?bindings=true",\u000a                type: "GET",\u000a                dataType: "json",\u000a                success: self.fromBindings\u000a            });      \u000a        };\u000a\u000a        self.fromBindings = function(response){\u000a            self.bind = {}\u000a            self.bind["commands"] = response.bind_cmd;\u000a            self.bind["notifications"] = response.bind_msg;\u000a            self.bind['no_setting'] = response.no_setting;\u000a            self.bind['bind_text'] = response.bind_text;\u000a            self.onBindLoad = true;\u000a            $("#telegram_msg_list").empty();\u000a            keys = self.bind["notifications"].sort();\u000a            for(var id in keys) {\u000a                bind_text = '';\u000a                if(keys[id] in self.bind['bind_text']){\u000a                    bind_text = '<span class="muted"><br /><small>Also for:';\u000a                    ks = self.bind['bind_text'][keys[id]].sort();\u000a                    for (var k in ks)\u000a                        bind_text += "<br>" + ks[k];\u000a                    bind_text += "</small></span>";\u000a                }\u000a                img = "camera";\u000a                hideMup = "";\u000a                hideComb = "";\u000a                if(self.settings.settings.plugins.telegram.messages[keys[id]].image()){\u000a                    img = "camera";\u000a                    btn = "success";\u000a                    txt = "Send Image";\u000a                    hideMup = "display:none";\u000a                    hideComb = "";\u000a                }\u000a                else{\u000a                    img = "ban-circle";\u000a                    btn = "warning";\u000a                    txt = "No Image";\u000a                    hideMup = "";\u000a                    hideComb = "display:none"\u000a                }\u000a                if(self.settings.settings.plugins.telegram.messages[keys[id]].gif()){\u000a                    imgGif = "camera";\u000a                    bGif = "success";\u000a                    txtGif = "Send Gif";\u000a                    hideMup = "";\u000a                    hideComb = "";\u000a                }\u000a                else{\u000a                    imgGif = "ban-circle";\u000a                    bGif = "warning";\u000a                    txtGif = "No Gif";\u000a                    hideMup = "";\u000a                    hideComb = ""\u000a                }\u000a                // TODO set to second message setting\u000a                if(self.settings.settings.plugins.telegram.messages[keys[id]].combined()){\u000a                    img2 = "comment";\u000a                    btn2 = "danger";\u000a                    txt2 = "Combined";\u000a                    if(hideComb === "")\u000a                        hideMup = "display:none";\u000a                }\u000a                else{\u000a                    img2 = "comments";\u000a                    btn2 = "info";\u000a                    txt2 = "Separated";\u000a                    hideMup = "";\u000a                }\u000a                if(self.settings.settings.plugins.telegram.messages[keys[id]].markup()==="HTML"){\u000a                    bOff = "info";\u000a                    bHtml = "danger active";\u000a                    bMd = "info";\u000a                    self.markupFrom[self.msgCnt] = 'HTML';\u000a                }\u000a                else if(self.settings.settings.plugins.telegram.messages[keys[id]].markup()==="Markdown"){\u000a                    bOff = "info";\u000a                    bHtml = "info";\u000a                    bMd = "danger active";\u000a                    self.markupFrom[self.msgCnt] = 'Markdown';\u000a                }\u000a                else{\u000a                    bOff = "danger active"\u000a                    bHtml = "info"\u000a                    bMd = "info"\u000a                    self.markupFrom[self.msgCnt] = 'off';\u000a                }\u000a                var btnGrp = '<span id="mupBut'+self.msgCnt+'" style="' + hideMup + '"><span class="muted"><small>Markup Selection<br></small></span><span class="btn-group" data-toggle="buttons-radio">';\u000a                btnGrp += '<button id="off'+self.msgCnt+'" type="button" class="btn btn-'+bOff+' btn-mini" data-bind="click: toggleMarkup.bind($data,\u005c''+self.msgCnt+'\u005c',\u005c'off\u005c',\u005c''+keys[id]+'\u005c')">Off</button>';\u000a                btnGrp += '<button id="HTML'+self.msgCnt+'" type="button" class="btn btn-'+bHtml+' btn-mini" data-bind="click: toggleMarkup.bind($data,\u005c''+self.msgCnt+'\u005c',\u005c'HTML\u005c',\u005c''+keys[id]+'\u005c')">HTML</button>';\u000a                btnGrp += '<button id="Markdown'+self.msgCnt+'" type="button" class="btn btn-'+bMd+' btn-mini" data-bind="click: toggleMarkup.bind($data,\u005c''+self.msgCnt+'\u005c',\u005c'Markdown\u005c',\u005c''+keys[id]+'\u005c')">MD</button>';\u000a                btnGrp += '</span><br></span>';\u000a\u000a                var btnImg = '<span class="muted"><small>Send with image?<br></small></span>';\u000a                btnImg += '<label id="chkBtn'+self.msgCnt+'" class="btn btn-'+btn+' btn-mini" title="Toggle \u005c'Send with image\u005c'">';\u000a                btnImg += '<input type="checkbox" style="display:none" data-bind="checked: settings.settings.plugins.telegram.messages.'+keys[id]+'.image, click: toggleImg(\u005c''+self.msgCnt+'\u005c')"/>';\u000a                btnImg += '<i id="chkImg'+self.msgCnt+'" class="icon-'+img+'"></i> ';\u000a                btnImg += '<span id="chkTxt'+self.msgCnt+'">'+txt+'</span></label><br>';\u000a\u000a                var btnGif = '<span class="muted"><small>Send with gif?<br></small></span>';\u000a                btnGif += '<label id="chkGifBtn'+self.msgCnt+'" class="btn btn-'+bGif+' btn-mini" title="Toggle \u005c'Send with gif\u005c'">';\u000a                btnGif += '<input type="checkbox" style="display:none" data-bind="checked: settings.settings.plugins.telegram.messages.'+keys[id]+'.gif, click: toggleGif(\u005c''+self.msgCnt+'\u005c')"/>';\u000a                btnGif += '<i id="chkGif'+self.msgCnt+'" class="icon-'+imgGif+'"></i> ';\u000a                btnGif += '<span id="chkGifTxt'+self.msgCnt+'">'+txtGif+'</span></label><br>';\u000a\u000a                var btnSecMsg = '<span id="combBut'+self.msgCnt+'" style="' + hideComb + '"> <span class="muted"><small>Combined message?<br></small></span>';\u000a                btnSecMsg += '<label id="chk2Btn'+self.msgCnt+'" class="btn btn-'+btn2+' btn-mini" title="Toggle \u005c'Send image in a second message\u005c'">';\u000a                btnSecMsg += '<input type="checkbox" style="display:none" data-bind="checked: settings.settings.plugins.telegram.messages.'+keys[id]+'.combined, click: toggleImg2(\u005c''+self.msgCnt+'\u005c')"/>';\u000a                btnSecMsg += '<i id="chk2Img'+self.msgCnt+'" class="icon-'+img2+'"></i> ';\u000a                btnSecMsg += '<span id="chk2Txt'+self.msgCnt+'">'+txt2+'</span></label><br></span>';\u000a\u000a                var msgEdt = '<div class="control-group"><div class="controls " ><hr style="margin:0px 0px 0px -90px;"></div></div><div class="control-group" id="telegramMsgText'+self.msgCnt+'">';\u000a                    msgEdt += '<label class="control-label"><strong>'+keys[id]+ '</strong>'+bind_text + '</label>';\u000a                    msgEdt += '<div class="controls " >';\u000a                        msgEdt += '<div class="row">';\u000a                            msgEdt += '<div class="span9"><textarea rows="4" style="margin-left:7px;" class="block" data-bind="value: settings.settings.plugins.telegram.messages.'+keys[id]+'.text"></textarea></div>';\u000a                            msgEdt += '<div class="span3" style="text-align:center;">' + btnImg + btnGif + btnSecMsg +  btnGrp + '</div>';\u000a                        msgEdt += '</div></div></div>';\u000a\u000a                $('#telegram_msg_list').append(msgEdt);\u000a                ko.applyBindings(self, $("#telegramMsgText"+self.msgCnt++)[0]);\u000a            }\u000a            self.isloading(false);\u000a            $('#chkImg0').removeClass("icon-camera");\u000a            $('#chkImg0').removeClass("icon-ban-circle");\u000a            $('#chkGif0').removeClass("icon-camera");\u000a            $('#chkGif0').removeClass("icon-ban-circle");\u000a            $('#chkBtn0').removeClass("btn-success");\u000a            $('#chkBtn0').removeClass("btn-warning");\u000a            $('#chkTxt0').text("");\u000a            $('#chkGifBtn0').removeClass("btn-success");\u000a            $('#chkGifBtn0').removeClass("btn-warning");\u000a            $('#chkGifTxt0').text("");\u000a            if(self.settings.settings.plugins.telegram.image_not_connected()){\u000a                $('#chkImg0').addClass("icon-camera");\u000a                $('#chkBtn0').addClass("btn-success");\u000a                $('#chkTxt0').text("Send Image");\u000a            }\u000a            else{\u000a                $('#chkImg0').addClass("icon-ban-circle");\u000a                $('#chkBtn0').addClass("btn-warning");\u000a                $('#chkTxt0').text("No Image");\u000a            }\u000a            if(self.settings.settings.plugins.telegram.gif_not_connected()){\u000a                $('#chkGif0').addClass("icon-camera");\u000a                $('#chkGifBtn0').addClass("btn-success");\u000a                $('#chkGifTxt0').text("Send Gif");\u000a            }\u000a            else{\u000a                $('#chkGif0').addClass("icon-ban-circle");\u000a                $('#chkGifBtn0').addClass("btn-warning");\u000a                $('#chkGifTxt0').text("No Gif");\u000a            }\u000a            self.onBindLoad = false;\u000a        }\u000a\u000a\u000a        self.toggleMarkup = function(data,sender,msg){\u000a            if(!self.onBindLoad){\u000a                if(self.markupFrom[data] !== sender){\u000a                    $('#'+sender+data).toggleClass("btn-info btn-danger");\u000a                    $('#'+self.markupFrom[data]+data).toggleClass("btn-info btn-danger");\u000a                    self.settings.settings.plugins.telegram.messages[msg].markup(sender);\u000a                }\u000a                self.markupFrom[data] = sender;\u000a            }\u000a        }\u000a\u000a\u000a        self.toggleImg = function(data){\u000a            if(!self.onBindLoad){\u000a                $('#chkImg'+data).toggleClass("icon-ban-circle icon-camera");\u000a                $('#chkBtn'+data).toggleClass("btn-success btn-warning");\u000a                if($('#chkTxt'+data).text()==="Send Image"){\u000a                    $('#chkTxt'+data).text("No Image");\u000a                    if(data !== "0"){\u000a                        $('#mupBut'+data).show();\u000a                        $('#combBut'+data).hide();\u000a                    }\u000a                }\u000a                else{\u000a                    $('#chkTxt'+data).text("Send Image");\u000a                    if(data !== "0"){\u000a                        if($('#chk2Txt'+data).text()==="Combined")\u000a                            $('#mupBut'+data).hide();    \u000a                        else\u000a                            $('#mupBut'+data).show();   \u000a                    \u000a                        $('#combBut'+data).show();\u000a                    }\u000a                }\u000a            }\u000a        }\u000a\u000a        self.toggleGif = function(data){\u000a            if(!self.onBindLoad){\u000a                $('#chkGif'+data).toggleClass("icon-ban-circle icon-camera");\u000a                $('#chkGifBtn'+data).toggleClass("btn-success btn-warning");\u000a                if($('#chkGifTxt'+data).text()==="Send Gif"){\u000a                    $('#chkGifTxt'+data).text("No Gif");\u000a                }\u000a                else{\u000a                    $('#chkGifTxt'+data).text("Send Gif");\u000a                }\u000a            }\u000a        }\u000a\u000a        self.toggleImg2 = function(data){\u000a            if(!self.onBindLoad){\u000a                $('#chk2Img'+data).toggleClass("icon-comment icon-comments");\u000a                $('#chk2Btn'+data).toggleClass("btn-info btn-danger");\u000a                if($('#chk2Txt'+data).text()==="Separated"){\u000a                    $('#chk2Txt'+data).text("Combined"); \u000a                    $('#mupBut'+data).hide();   \u000a                }\u000a                else{\u000a                    $('#chk2Txt'+data).text("Separated");  \u000a                    $('#mupBut'+data).show();\u000a                }\u000a            }\u000a        }\u000a\u000a        self.updateChat = function(data) {\u000a            self.requestData(true,true);\u000a            self.editChatDialog.modal("hide");\u000a        }\u000a    \u000a        self.testToken = function(data, event) {\u000a            self.isloading(true);\u000a            console.log("Testing token " + $('#settings_plugin_telegram_token').val());\u000a            $.ajax({\u000a                url: API_BASEURL + "plugin/telegram",\u000a                type: "POST",\u000a                dataType: "json",\u000a                data: JSON.stringify({ "command": "testToken", "token": $('#settings_plugin_telegram_token').val()}),\u000a                contentType: "application/json",\u000a                success: self.testResponse\u000a            });\u000a        }\u000a        \u000a        self.testResponse = function(response) {\u000a            self.isloading(false);\u000a            self.token_state_str(response.connection_state_str);\u000a            self.errored(!response.ok);\u000a            if(!response.ok){\u000a                $('#teleErrored').addClass("text-error");\u000a                $('#teleErrored').removeClass("text-success");\u000a                $('#teleErrored2').addClass("text-error");\u000a                $('#teleErrored2').removeClass("text-success");\u000a            }\u000a            else{\u000a                $('#teleErrored').addClass("text-success");\u000a                $('#teleErrored').removeClass("text-error");\u000a                $('#teleErrored2').addClass("text-success");\u000a                $('#teleErrored2').removeClass("text-error");\u000a            }\u000a\u000a        }\u000a        \u000a        self.fromResponse = function(response) {\u000a            if(response === undefined) return;\u000a            if(response.hasOwnProperty("connection_state_str"))\u000a                self.connection_state_str(response.connection_state_str);\u000a            if(response.hasOwnProperty("connection_ok"))\u000a                //self.errored(!response.connection_ok);\u000a            var entries = response.chats;\u000a            if (entries === undefined) return;\u000a            var array = [];\u000a            var formerChats = _.pluck(self.chatListHelper.allItems, 'id');\u000a            var currentChats = [];\u000a            var newChats = false;\u000a            for(var id in entries) {\u000a                var data = entries[id];\u000a                data['id'] = id;\u000a                data['image'] = data['image'];\u000a                if(data['new']) {\u000a                    data['newUsr'] = true;\u000a                } else {\u000a                    data['newUsr'] = false;\u000a                }\u000a                array.push(data);\u000a                currentChats.push(id);\u000a                newChats = newChats || !_.includes(formerChats, id);\u000a            }\u000a\u000a            var deletedChatIds = _.difference(formerChats, currentChats);\u000a            if (newChats || (deletedChatIds && deletedChatIds.length)) {\u000a                // Transfer the chats back to the server settings (because just hitting "save" on the Settings dialog\u000a                // won't transfer anything we haven't explicitely set).\u000a\u000a                // TODO: This whole workflow should be optimized!\u000a                // Currently it takes two full server/client round trips to get the chats in sync, and just reusing\u000a                // the plugin's API for that purpose would probably be way way more efficient and less error prone.\u000a                self.settings.saveData({plugins: {telegram: {chats: entries}}});\u000a            }\u000a            self.chatListHelper.updateItems(array);\u000a            self.isloading(false);\u000a        };\u000a\u000a\u000a\u000a        self.showEditChatDialog = function(data) {\u000a            if (data === undefined) return;\u000a            //ko.cleanNode($("#telegram-acccmd-chkbox-box")[0]);\u000a            $("#telegram-acccmd-chkbox").empty();\u000a            $('#telegram-acccmd-chkbox').append('<input id="telegram-acccmd-chkbox-box" type="checkbox" data-bind="checked: settings.settings.plugins.telegram.chats[\u005c''+data['id']+'\u005c'][\u005c'accept_commands\u005c']"> Allow to send commands <span class="help-block"><small id="telegram-groupNotify-hint"></small></span>');\u000a            ko.applyBindings(self, $("#telegram-acccmd-chkbox-box")[0]);\u000a\u000a            //ko.cleanNode($("#telegram-notify-chkbox-box")[0]);\u000a            $("#telegram-notify-chkbox").empty();\u000a            $('#telegram-notify-chkbox').append('<input id="telegram-notify-chkbox-box" type="checkbox" data-bind="checked: settings.settings.plugins.telegram.chats[\u005c''+data['id']+'\u005c'][\u005c'send_notifications\u005c']"> Send notifications<span class=\u005c"help-block\u005c"><small>After enabling this option, the enabled notifications will be received. You have to enable individual notifications by clicking the blue notify button in the list after closing this dialog.</small></span>');\u000a            ko.applyBindings(self, $("#telegram-notify-chkbox-box")[0]);\u000a\u000a            self.currChatTitle(data.title);\u000a            self.currChatID = data.id;\u000a\u000a            $('#telegram-groupNotify-hint').empty();\u000a            $('#telegram-user-allowed-chkbox').empty();\u000a            if(!data.private){\u000a                $('#telegram-groupNotify-hint').append("After enabling this option, EVERY user of this group is allowed to send enabled commands. You have to set permissions for individual commands by clicking the blue command icon in the list after closing this dialog. If 'Allow user commands' is enabled, these users still use their private settings in addition to the group settings.");\u000a                $('#telegram-user-allowed-chkbox').append("<div class=\u005c"control-group\u005c"><div class=\u005c"controls\u005c"><label class=\u005c"checkbox\u005c"><input id=\u005c"telegram-user-allowed-chkbox-box\u005c" type=\u005c"checkbox\u005c" data-bind=\u005c"checked: settings.settings.plugins.telegram.chats['"+data['id']+"']['allow_users']\u005c"> Allow user commands <span class=\u005c"help-block\u005c"><small>When this is enabled, users with command access are allowed to send their individual enabled commands from this group. No other user in this group is allowed to send commands.</small></span></label></div></div>");\u000a                ko.applyBindings(self, $("#telegram-user-allowed-chkbox-box")[0]);\u000a            }\u000a            else{\u000a                $('#telegram-groupNotify-hint').append("After enabling this option, you have to set permissions for individual commands by clicking the blue command icon in the list after closing this dialog.");\u000a                $('#telegram-user-allowed-chkbox').append("<input id=\u005c"telegram-user-allowed-chkbox-box\u005c" style=\u005c"display:none\u005c" type=\u005c"checkbox\u005c" data-bind=\u005c"checked: settings.settings.plugins.telegram.chats['"+data['id']+"']['allow_users']\u005c"> ");\u000a                ko.applyBindings(self, $("#telegram-user-allowed-chkbox-box")[0]);\u000a            }\u000a            \u000a	        self.editChatDialog.modal("show");\u000a        }\u000a\u000a        self.showEditCmdDialog = function(data,option) {\u000a            if (data === undefined) return;\u000a            self.currChatTitle("Edit " + option + ": " +data.title);\u000a            for(self.cmdCnt;self.cmdCnt>0;self.cmdCnt--)\u000a                $("#telegram-cmd-chkbox"+(self.cmdCnt-1)).remove();\u000a            keys = self.bind[option].sort();\u000a            for(var id in keys) {\u000a                if( self.bind['no_setting'].indexOf(keys[id]) < 0) {\u000a                    $("#telegram-cmd-chkbox-grp").append('<span id="telegram-cmd-chkbox'+self.cmdCnt+'"><label class="checkbox"><input  type="checkbox" data-bind="checked: settings.settings.plugins.telegram.chats[\u005c''+data['id']+'\u005c'][\u005c''+option+'\u005c'][\u005c''+keys[id]+'\u005c']"> <span>'+keys[id]     +'</span><label></span>');\u000a                    ko.applyBindings(self, $("#telegram-cmd-chkbox"+self.cmdCnt++)[0]);\u000a                }\u000a            }\u000a            $('#tele-edit-control-label').empty();\u000a            if (option == "commands")\u000a                $('#tele-edit-control-label').append("<strong>Allowed commands:</strong>");\u000a            else\u000a                $('#tele-edit-control-label').append("<strong>Get Notification at...</strong>")\u000a            self.editCmdDialog.modal("show");\u000a        }\u000a\u000a        self.delChat = function(data) {\u000a            if (data === undefined) return;\u000a            var callback = function() {\u000a                    self.isloading(true);\u000a                    data['command'] = "delChat";\u000a                    data['ID'] = data.id\u000a                    console.log("Delete Chat Data " + String(data['ID']));\u000a                    $.ajax({\u000a                        url: API_BASEURL + "plugin/telegram",\u000a                        type: "POST",\u000a                        dataType: "json",\u000a                        data: JSON.stringify(data),\u000a                        contentType: "application/json",\u000a                        success: self.fromResponse\u000a                    });\u000a                };\u000a            showConfirmationDialog('Do you really want to delete ' + data.title, function (e) {\u000a                callback();\u000a            });\u000a  \u000a        }\u000a\u000a        self.onSettingsHidden = function() {\u000a            clearTimeout(self.reloadPending);\u000a        }\u000a\u000a        self.onSettingsShown = function() {\u000a            self.requestData(true,false);\u000a            self.requestData();\u000a            self.requestBindings();\u000a            self.testToken();\u000a            self.editChatDialog = $("#settings-telegramDialogEditChat");\u000a            self.editCmdDialog = $("#settings-telegramDialogEditCommands");\u000a            self.varInfoDialog = $('#settings-telegramDialogVarInfo');\u000a            self.emoInfoDialog = $('#settings-telegramDialogEmoInfo');\u000a            self.mupInfoDialog = $('#settings-telegramDialogMupInfo');\u000a            $('.teleEmojiImg').each( function(){\u000a                $(this).attr('src','/plugin/telegram/static/img/'+$(this).attr('id')+".png")\u000a            });\u000a            \u000a        }\u000a\u000a        self.onServerDisconnect = function(){\u000a            clearTimeout(self.reloadPending);\u000a        }\u000a\u000a        self.onDataUpdaterReconnect = function(){\u000a            if(self.reloadUsr())\u000a                self.requestData();\u000a            else\u000a                self.requestData(true,false);\u000a                self.requestData();\u000a            self.requestBindings();\u000a        }\u000a\u000a    }\u000a\u000a    // view model class, parameters for constructor, container to bind to\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        TelegramViewModel,\u000a\u000a        // e.g. loginStateViewModel, settingsViewModel, ...\u000a        [ "settingsViewModel" ],\u000a\u000a        // e.g. #settings_plugin_telegram, #tab_plugin_telegram, ...\u000a        [ '#settings_plugin_telegram','#wizard_plugin_telegram']\u000a    ]);\u000a});\u000a\u000a;\u000a
p0
.