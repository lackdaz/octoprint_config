V// source: plugin/octolapse/js/octolapse.settings.js\u000a/*\u000a##################################################################################\u000a# Octolapse - A plugin for OctoPrint used for making stabilized timelapse videos.\u000a# Copyright (C) 2017  Brad Hochgesang\u000a##################################################################################\u000a# This program is free software: you can redistribute it and/or modify\u000a# it under the terms of the GNU Affero General Public License as published\u000a# by the Free Software Foundation, either version 3 of the License, or\u000a# (at your option) any later version.\u000a#\u000a# This program is distributed in the hope that it will be useful,\u000a# but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\u000a# GNU Affero General Public License for more details.\u000a#\u000a# You should have received a copy of the GNU Affero General Public License\u000a# along with this program.  If not, see the following:\u000a# https://github.com/FormerLurker/Octolapse/blob/master/LICENSE\u000a#\u000a# You can contact the author either through the git-hub repository, or at the\u000a# following email address: FormerLurker@pm.me\u000a##################################################################################\u000a*/\u000a\u000a$(function () {\u000a\u000a\u000a    // Settings View Model\u000a    Octolapse.SettingsViewModel = function (parameters) {\u000a        // Create a reference to this object\u000a        var self = this;\u000a        // Add this object to our Octolapse namespace\u000a        Octolapse.Settings = this;\u000a        // Create an empty add/edit profile so that the initial binding to the empty template works without errors.\u000a        Octolapse.Settings.AddEditProfile = ko.observable({\u000a            "templateName": "empty-template",\u000a            "profileObservable": ko.observable()\u000a        });\u000a        // Assign the Octoprint settings to our namespace\u000a        Octolapse.Settings.global_settings = parameters[0];\u000a\u000a        self.loginState = parameters[1];\u000a\u000a\u000a        // Called before octoprint binds the viewmodel to the plugin\u000a        self.onBeforeBinding = function () {\u000a\u000a            /*\u000a                Create our global settings\u000a            */\u000a            self.settings = self.global_settings.settings.plugins.octolapse;\u000a            var settings = ko.toJS(self.settings); // just get the values\u000a\u000a            /**\u000a             * Profiles - These are bound by octolapse.profiles.js\u000a             */\u000a            /*\u000a                Create our printers view model\u000a            */\u000a            var printerSettings =\u000a                {\u000a                    'current_profile_guid': null\u000a                    , 'profiles': []\u000a                    , 'default_profile': null\u000a                    , 'profileOptions': {}\u000a                    , 'profileViewModelCreateFunction': Octolapse.PrinterProfileViewModel\u000a                    , 'profileValidationRules': Octolapse.PrinterProfileValidationRules\u000a                    , 'bindingElementId': 'octolapse_printer_tab'\u000a                    , 'addEditTemplateName': 'printer-template'\u000a                    , 'profileTypeName': 'Printer'\u000a                    , 'addUpdatePath': 'addUpdateProfile'\u000a                    , 'removeProfilePath': 'removeProfile'\u000a                    , 'setCurrentProfilePath': 'setCurrentProfile'\u000a                };\u000a            Octolapse.Printers = new Octolapse.ProfilesViewModel(printerSettings);\u000a\u000a            /*\u000a                Create our stabilizations view model\u000a            */\u000a            var stabilizationSettings =\u000a                {\u000a                    'current_profile_guid': null\u000a                    , 'profiles': []\u000a                    , 'default_profile': null\u000a                    , 'profileOptions': {}\u000a                    , 'profileViewModelCreateFunction': Octolapse.StabilizationProfileViewModel\u000a                    , 'profileValidationRules': Octolapse.StabilizationProfileValidationRules\u000a                    , 'bindingElementId': 'octolapse_stabilization_tab'\u000a                    , 'addEditTemplateName': 'stabilization-template'\u000a                    , 'profileTypeName': 'Stabilization'\u000a                    , 'addUpdatePath': 'addUpdateProfile'\u000a                    , 'removeProfilePath': 'removeProfile'\u000a                    , 'setCurrentProfilePath': 'setCurrentProfile'\u000a                };\u000a            Octolapse.Stabilizations = new Octolapse.ProfilesViewModel(stabilizationSettings);\u000a            /*\u000a                Create our snapshots view model\u000a            */\u000a            var snapshotSettings =\u000a                {\u000a                    'current_profile_guid': null,\u000a                    'profiles': [],\u000a                    'default_profile': null,\u000a                    'profileOptions': {},\u000a                    'profileViewModelCreateFunction': Octolapse.SnapshotProfileViewModel,\u000a                    'profileValidationRules': Octolapse.SnapshotProfileValidationRules,\u000a                    'bindingElementId': 'octolapse_snapshot_tab',\u000a                    'addEditTemplateName': 'snapshot-template',\u000a                    'profileTypeName': 'Snapshot',\u000a                    'addUpdatePath': 'addUpdateProfile',\u000a                    'removeProfilePath': 'removeProfile',\u000a                    'setCurrentProfilePath': 'setCurrentProfile'\u000a                };\u000a            Octolapse.Snapshots = new Octolapse.ProfilesViewModel(snapshotSettings);\u000a            /*\u000a                Create our rendering view model\u000a            */\u000a            var renderingSettings =\u000a                {\u000a                    'current_profile_guid': null,\u000a                     'profiles': [],\u000a                     'default_profile': null,\u000a                     'profileOptions': {},\u000a                    'profileViewModelCreateFunction': Octolapse.RenderingProfileViewModel,\u000a                    'profileValidationRules': Octolapse.RenderingProfileValidationRules,\u000a                    'bindingElementId': 'octolapse_rendering_tab',\u000a                    'addEditTemplateName': 'rendering-template',\u000a                    'profileTypeName': 'Rendering',\u000a                    'addUpdatePath': 'addUpdateProfile',\u000a                    'removeProfilePath': 'removeProfile',\u000a                    'setCurrentProfilePath': 'setCurrentProfile'\u000a                };\u000a            Octolapse.Renderings = new Octolapse.ProfilesViewModel(renderingSettings);\u000a            /*\u000a                Create our camera view model\u000a            */\u000a            var cameraSettings =\u000a                {\u000a                    'current_profile_guid': null,\u000a                    'profiles': [],\u000a                    'default_profile': null,\u000a                    'profileOptions': {},\u000a                    'profileViewModelCreateFunction': Octolapse.CameraProfileViewModel,\u000a                    'profileValidationRules': Octolapse.CameraProfileValidationRules,\u000a                    'bindingElementId': 'octolapse_camera_tab',\u000a                    'addEditTemplateName': 'camera-template',\u000a                    'profileTypeName': 'Camera',\u000a                    'addUpdatePath': 'addUpdateProfile',\u000a                    'removeProfilePath': 'removeProfile',\u000a                    'setCurrentProfilePath': 'setCurrentProfile'\u000a                };\u000a            Octolapse.Cameras = new Octolapse.ProfilesViewModel(cameraSettings);\u000a\u000a            /*\u000a                Create our debug view model\u000a            */\u000a            var debugSettings =\u000a                {\u000a                    'current_profile_guid': null,\u000a                    'profiles': [],\u000a                    'default_profile': null,\u000a                    'profileOptions': {},\u000a                    'profileViewModelCreateFunction': Octolapse.DebugProfileViewModel,\u000a                    'profileValidationRules': Octolapse.DebugProfileValidationRules,\u000a                    'bindingElementId': 'octolapse_debug_tab',\u000a                    'addEditTemplateName': 'debug-template',\u000a                    'profileTypeName': 'Debug',\u000a                    'addUpdatePath': 'addUpdateProfile',\u000a                    'removeProfilePath': 'removeProfile',\u000a                    'setCurrentProfilePath': 'setCurrentProfile'\u000a                };\u000a            Octolapse.DebugProfiles = new Octolapse.ProfilesViewModel(debugSettings);\u000a\u000a        };\u000a\u000a        // Update all octolapse settings\u000a        self.updateSettings = function (settings) {\u000a            //console.log("Settings Received:");\u000a            //console.log(settings);\u000a            // SettingsMain\u000a            Octolapse.SettingsMain.update(settings);\u000a\u000a            // Printers\u000a            Octolapse.Printers.profiles([]);\u000a            Octolapse.Printers.default_profile(settings.default_printer_profile);\u000a            Octolapse.Printers.profileOptions = {\u000a                'slicer_type_options': settings.slicer_type_options,\u000a                'e_axis_default_mode_options': settings.e_axis_default_mode_options,\u000a                'g90_influences_extruder_options': settings.g90_influences_extruder_options,\u000a                'xyz_axes_default_mode_options': settings.xyz_axes_default_mode_options,\u000a                'units_default_options': settings.units_default_options,\u000a                'axis_speed_display_unit_options': settings.axis_speed_display_unit_options\u000a            };\u000a            Octolapse.Printers.current_profile_guid(settings.current_printer_profile_guid);\u000a            settings.printers.forEach(function (item, index) {\u000a                Octolapse.Printers.profiles.push(new Octolapse.PrinterProfileViewModel(item));\u000a            });\u000a\u000a            Octolapse.Stabilizations.profiles([]);\u000a            Octolapse.Stabilizations.default_profile(settings.default_stabilization_profile);\u000a            Octolapse.Stabilizations.profileOptions = {'stabilization_type_options': settings.stabilization_type_options}\u000a            Octolapse.Stabilizations.current_profile_guid(settings.current_stabilization_profile_guid);\u000a            settings.stabilizations.forEach(function (item, index) {\u000a                Octolapse.Stabilizations.profiles.push(new Octolapse.StabilizationProfileViewModel(item));\u000a            });\u000a\u000a            // Snapshots\u000a            Octolapse.Snapshots.profiles([]);\u000a            Octolapse.Snapshots.default_profile(settings.default_snapshot_profile);\u000a            Octolapse.Snapshots.profileOptions ={\u000a                'trigger_types': settings.trigger_types,\u000a                'snapshot_extruder_trigger_options': settings.snapshot_extruder_trigger_options,\u000a                'position_restriction_shapes': settings.position_restriction_shapes,\u000a                'position_restriction_types': settings.position_restriction_types\u000a            }\u000a            Octolapse.Snapshots.current_profile_guid(settings.current_snapshot_profile_guid);\u000a            settings.snapshots.forEach(function (item, index) {\u000a                Octolapse.Snapshots.profiles.push(new Octolapse.SnapshotProfileViewModel(item));\u000a            });\u000a\u000a            // Renderings\u000a            Octolapse.Renderings.profiles([]);\u000a            Octolapse.Renderings.default_profile(settings.default_rendering_profile);\u000a            Octolapse.Renderings.profileOptions = {\u000a                'rendering_fps_calculation_options': settings.rendering_fps_calculation_options,\u000a                'rendering_output_format_options': settings.rendering_output_format_options,\u000a                'rendering_file_templates': settings.rendering_file_templates,\u000a                'overlay_text_templates': settings.overlay_text_templates,\u000a                'overlay_text_alignment_options': settings.overlay_text_alignment_options,\u000a                'overlay_text_valign_options': settings.overlay_text_valign_options,\u000a                'overlay_text_halign_options': settings.overlay_text_halign_options,\u000a            }\u000a            Octolapse.Renderings.current_profile_guid(settings.current_rendering_profile_guid);\u000a            settings.renderings.forEach(function (item, index) {\u000a                var o = new Octolapse.RenderingProfileViewModel(item);\u000a                Octolapse.Renderings.profiles.push(o);\u000a            });\u000a\u000a            // Cameras\u000a            Octolapse.Cameras.profiles([]);\u000a            Octolapse.Cameras.default_profile(settings.default_camera_profile);\u000a            Octolapse.Cameras.profileOptions = {\u000a                'camera_powerline_frequency_options': settings.camera_powerline_frequency_options,\u000a                'camera_exposure_type_options': settings.camera_exposure_type_options,\u000a                'camera_led_1_mode_options': settings.camera_led_1_mode_options,\u000a                'snapshot_transpose_options': settings.snapshot_transpose_options,\u000a                'camera_type_options': settings.camera_type_options\u000a\u000a            }\u000a\u000a            settings.cameras.forEach(function (item, index) {\u000a                Octolapse.Cameras.profiles.push(new Octolapse.CameraProfileViewModel(item));\u000a            });\u000a\u000a            // Debug\u000a            Octolapse.DebugProfiles.profiles([]);\u000a            Octolapse.DebugProfiles.default_profile(settings.current_debug_profile_guid);\u000a            Octolapse.DebugProfiles.profileOptions = {'debug_profile_options': settings.debug_profile_options}\u000a            Octolapse.DebugProfiles.current_profile_guid(settings.current_debug_profile_guid);\u000a            settings.debug_profiles.forEach(function (item, index) {\u000a                Octolapse.DebugProfiles.profiles.push(new Octolapse.DebugProfileViewModel(item));\u000a            });\u000a\u000a        };\u000a\u000a        /*\u000a            reload the default settings\u000a        */\u000a        self.restoreDefaultSettings = function () {\u000a            Octolapse.showConfirmDialog(\u000a                "restore-defaults",\u000a                "Restore Default Settings",\u000a                "You will lose ALL of your octolapse settings by restoring the defaults!  Are you SURE?",\u000a                function(){\u000a                    var data = {"client_id": Octolapse.Globals.client_id};\u000a                    $.ajax({\u000a                        url: "./plugin/octolapse/restoreDefaults",\u000a                        type: "POST",\u000a                        data: JSON.stringify(data),\u000a                        contentType: "application/json",\u000a                        dataType: "json",\u000a                        success: function (newSettings) {\u000a\u000a                            self.updateSettings(newSettings);\u000a                            Octolapse.Globals.update(newSettings);\u000a                            alert("The default settings have been restored.  It is recommended that you restart the OctoPrint server now.");\u000a                        },\u000a                        error: function (XMLHttpRequest, textStatus, errorThrown) {\u000a                            alert("Unable to restore the default settings.  Status: " + textStatus + ".  Error: " + errorThrown);\u000a                        }\u000a                    });\u000a                }\u000a            );\u000a        };\u000a        /*\u000a            load all settings default settings\u000a        */\u000a        self.loadSettings = function () {\u000a\u000a            // If no guid is supplied, this is a new profile.  We will need to know that later when we push/update our observable array\u000a            $.ajax({\u000a                url: "./plugin/octolapse/loadSettings",\u000a                type: "POST",\u000a                contentType: "application/json",\u000a                dataType: "json",\u000a                success: function (newSettings) {\u000a                    self.updateSettings(newSettings);\u000a                    //console.log("Settings have been loaded.");\u000a                },\u000a                error: function (XMLHttpRequest, textStatus, errorThrown) {\u000a                    alert("Octolapse was unable to load the current settings.  Status: " + textStatus + ".  Error: " + errorThrown);\u000a                }\u000a            });\u000a\u000a        };\u000a\u000a        self.clearSettings = function (){\u000a             // Printers\u000a            Octolapse.Printers.profiles([]);\u000a            Octolapse.Printers.default_profile(null);\u000a            Octolapse.Printers.current_profile_guid(null);\u000a            Octolapse.Printers.profileOptions = {};\u000a            // Stabilizations\u000a            Octolapse.Stabilizations.profiles([]);\u000a            Octolapse.Stabilizations.default_profile(null);\u000a            Octolapse.Stabilizations.current_profile_guid(null);\u000a            Octolapse.Stabilizations.profileOptions = {};\u000a            // Snapshots\u000a            Octolapse.Snapshots.profiles([]);\u000a            Octolapse.Snapshots.default_profile(null);\u000a            Octolapse.Snapshots.current_profile_guid(null);\u000a            Octolapse.Snapshots.profileOptions = {};\u000a            // Renderings\u000a            Octolapse.Renderings.profiles([]);\u000a            Octolapse.Renderings.default_profile(null);\u000a            Octolapse.Renderings.current_profile_guid(null);\u000a            Octolapse.Renderings.profileOptions = {};\u000a            // Cameras\u000a            Octolapse.Cameras.profiles([]);\u000a            Octolapse.Cameras.default_profile(null);\u000a            Octolapse.Cameras.current_profile_guid(null);\u000a            Octolapse.Cameras.profileOptions = {};\u000a            // Debugs\u000a            Octolapse.DebugProfiles.profiles([]);\u000a            Octolapse.DebugProfiles.default_profile(null);\u000a            Octolapse.DebugProfiles.current_profile_guid(null);\u000a            Octolapse.DebugProfiles.profileOptions = {};\u000a        }\u000a        /*\u000a            Profile Add/Update routine for showAddEditDialog\u000a        */\u000a        self.addUpdateProfile = function (profile) {\u000a            switch (profile.templateName) {\u000a                case "printer-template":\u000a                    Octolapse.Printers.addUpdateProfile(profile.profileObservable, self.hideAddEditDialog());\u000a                    break;\u000a                case "stabilization-template":\u000a                    Octolapse.Stabilizations.addUpdateProfile(profile.profileObservable, self.hideAddEditDialog());\u000a                    break;\u000a                case "snapshot-template":\u000a                    Octolapse.Snapshots.addUpdateProfile(profile.profileObservable, self.hideAddEditDialog());\u000a                    break;\u000a                case "rendering-template":\u000a                    Octolapse.Renderings.addUpdateProfile(profile.profileObservable, self.hideAddEditDialog());\u000a                    break;\u000a                case "camera-template":\u000a                    Octolapse.Cameras.addUpdateProfile(profile.profileObservable, self.hideAddEditDialog());\u000a                    break;\u000a                case "debug-template":\u000a                    Octolapse.DebugProfiles.addUpdateProfile(profile.profileObservable, self.hideAddEditDialog());\u000a                    break;\u000a                default:\u000a                    alert("Cannot save the object, the template (" + profile.templateName + ") is unknown!");\u000a                    break;\u000a            }\u000a\u000a        };\u000a\u000a        /*\u000a            Modal Dialog Functions\u000a        */\u000a        // hide the modal dialog\u000a        self.hideAddEditDialog = function (sender, event) {\u000a            $("#octolapse_add_edit_profile_dialog").modal("hide");\u000a        };\u000a        // show the modal dialog\u000a        self.showAddEditDialog = function (options, sender) {\u000a            // Create all the variables we want to store for callbacks\u000a            //console.log("octolapse.settings.js - Showing add edit dialog.");\u000a            var dialog = this;\u000a            dialog.sender = sender;\u000a            dialog.profileObservable = options.profileObservable;\u000a            dialog.templateName = options.templateName;\u000a            dialog.$addEditDialog = $("#octolapse_add_edit_profile_dialog");\u000a            dialog.$addEditForm = dialog.$addEditDialog.find("#octolapse_add_edit_profile_form");\u000a            dialog.$cancelButton = $("a.cancel", dialog.$addEditDialog);\u000a            dialog.$saveButton = $("a.save", dialog.$addEditDialog);\u000a            dialog.$defaultButton = $("a.set-defaults", dialog.$addEditDialog);\u000a            dialog.$dialogTitle = $("h3.modal-title", dialog.$addEditDialog);\u000a            dialog.$dialogWarningContainer = $("div.dialog-warning", dialog.$addEditDialog);\u000a            dialog.$dialogWarningText = $("span", dialog.$dialogWarningContainer);\u000a            dialog.$summary = dialog.$addEditForm.find("#add_edit_validation_summary");\u000a            dialog.$errorCount = dialog.$summary.find(".error-count");\u000a            dialog.$errorList = dialog.$summary.find("ul.error-list");\u000a            dialog.$modalBody = dialog.$addEditDialog.find(".modal-body");\u000a\u000a            // Create all of the validation rules\u000a            var rules = {\u000a                rules: options.validationRules.rules,\u000a                messages: options.validationRules.messages,\u000a                ignore: ".ignore_hidden_errors:hidden",\u000a                errorPlacement: function (error, element) {\u000a                    var error_id = $(element).attr("id");\u000a                    var $field_error = $(".error_label_container[data-error-for='" + error_id + "']");\u000a                    //console.log("Placing Error, element:" + error_id + ", Error: " + $(error).html());\u000a                    $field_error.html(error);\u000a                },\u000a                unhighlight: function (element, errorClass) {\u000a                    //$(element).parent().parent().removeClass(errorClass);\u000a                    var error_id = $(element).attr("id");\u000a                    var $field_error = $(".error_label_container[data-error-for='" + error_id + "']");\u000a                    //console.log("Unhighlighting error for element:" + error_id + ", ErrorClass: " + errorClass);\u000a                    $field_error.addClass("checked");\u000a                    $field_error.removeClass(errorClass);\u000a                },\u000a                highlight: function (element, errorClass) {\u000a                    //$(element).parent().parent().addClass(errorClass);\u000a                    var error_id = $(element).attr("id");\u000a                    var $field_error = $(".error_label_container[data-error-for='" + error_id + "']");\u000a                    //console.log("Highlighting error for element:" + error_id + ", ErrorClass: " + errorClass);\u000a                    $field_error.removeClass("checked");\u000a                    $field_error.addClass(errorClass);\u000a                },\u000a                invalidHandler: function () {\u000a                    //console.log("Invalid!");\u000a                    dialog.$errorCount.empty();\u000a                    dialog.$summary.show();\u000a                    var numErrors = dialog.validator.numberOfInvalids();\u000a                    if (numErrors === 1)\u000a                        dialog.$errorCount.text("1 field is invalid");\u000a                    else\u000a                        dialog.$errorCount.text(numErrors + " fields are invalid");\u000a                },\u000a                errorContainer: "#add_edit_validation_summary",\u000a                success: function (label) {\u000a                    label.html("&nbsp;");\u000a                    label.parent().addClass('checked');\u000a                    $(label).parent().parent().parent().removeClass('error');\u000a                },\u000a                onfocusout: function (element, event) {\u000a                    dialog.validator.form();\u000a                    /*\u000a                    return;\u000a\u000a                    var also_validate = $(element).attr("data-also-validate");\u000a                    if(also_validate)\u000a                    {\u000a                        var fields_to_validate = also_validate.split(" ");\u000a                        fields_to_validate.forEach(function(item){\u000a                           $("#"+item).valid();\u000a                        });\u000a                    }\u000a\u000a                    $.validator.defaults.onfocusout.call(this, element, event);\u000a                    //\u000a                    */\u000a                }\u000a\u000a            };\u000a            dialog.validator = null;\u000a            // configure the modal hidden event.  Isn't it funny that bootstrap's own shortenting of their name is BS?\u000a            dialog.$addEditDialog.on("hidden.bs.modal", function () {\u000a                // Clear out error summary\u000a                dialog.$errorCount.empty();\u000a                dialog.$errorList.empty();\u000a                dialog.$summary.hide();\u000a                // Destroy the validator if it exists, both to save on resources, and to clear out any leftover junk.\u000a                if (dialog.validator != null) {\u000a                    dialog.validator.destroy();\u000a                    dialog.validator = null;\u000a                }\u000a            });\u000a            // configure the dialog show event\u000a            dialog.$addEditDialog.on("show.bs.modal", function () {\u000a                Octolapse.Settings.AddEditProfile({\u000a                    "profileObservable": dialog.profileObservable,\u000a                    "templateName": dialog.templateName\u000a                });\u000a                // Adjust the margins, height and position\u000a                // Set title\u000a                dialog.$dialogTitle.text(options.title);\u000a                if(options.warning == null)\u000a                {\u000a                    dialog.$dialogWarningContainer.hide();\u000a                    dialog.$dialogWarningText.text("");\u000a                }\u000a                else\u000a                {\u000a                    dialog.$dialogWarningText.text(options.warning);\u000a                    dialog.$dialogWarningContainer.show();\u000a\u000a                }\u000a\u000a                dialog.$addEditDialog.css({\u000a                    width: 'auto',\u000a                    'margin-left': function () {\u000a                        return -($(this).width() / 2);\u000a                    }\u000a                });\u000a\u000a                // Initialize the profile.\u000a                var onShow = Octolapse.Settings.AddEditProfile().profileObservable().onShow;\u000a                if (typeof onShow == 'function') {\u000a                    onShow();\u000a                }\u000a            });\u000a            // Configure the shown event\u000a            dialog.$addEditDialog.on("shown.bs.modal", function () {\u000a                dialog.validator = dialog.$addEditForm.validate(rules);\u000a                dialog.validator.form()\u000a                // Remove any click event bindings from the cancel button\u000a                dialog.$cancelButton.unbind("click");\u000a                // Called when the user clicks the cancel button in any add/update dialog\u000a                dialog.$cancelButton.bind("click", function () {\u000a                    // Hide the dialog\u000a                    self.hideAddEditDialog();\u000a                });\u000a\u000a                // remove any click event bindings from the defaults button\u000a                dialog.$defaultButton.unbind("click");\u000a                dialog.$defaultButton.bind("click", function () {\u000a                    var newProfile = dialog.sender.getResetProfile(Octolapse.Settings.AddEditProfile().profileObservable());\u000a                    Octolapse.Settings.AddEditProfile().profileObservable(newProfile);\u000a\u000a                });\u000a\u000a                // Remove any click event bindings from the save button\u000a                dialog.$saveButton.unbind("click");\u000a                // Called when a user clicks the save button on any add/update dialog.\u000a                dialog.$saveButton.bind("click", function () {\u000a                    if (dialog.$addEditForm.valid()) {\u000a                        // the form is valid, add or update the profile\u000a                        self.addUpdateProfile(Octolapse.Settings.AddEditProfile());\u000a                    }\u000a                    else {\u000a                        // Search for any hidden elements that are invalid\u000a                        //console.log("Checking ofr hidden field error");\u000a                        var $fieldErrors = dialog.$addEditForm.find('.error_label_container.error');\u000a                        $fieldErrors.each(function (index, element) {\u000a                            // Check to make sure the field is hidden.  If it's not, don't bother showing the parent container.\u000a                            // This can happen if more than one field is invalid in a hidden form\u000a                            var $errorContainer = $(element);\u000a                            if (!$errorContainer.is(":visible")) {\u000a                                //console.log("Hidden error found, showing");\u000a                                var $collapsableContainer = $errorContainer.parents(".collapsible");\u000a                                if ($collapsableContainer.length > 0)\u000a                                // The containers may be nested, show each\u000a                                    $collapsableContainer.each(function (index, container) {\u000a                                        //console.log("Showing the collapsed container");\u000a                                        $(container).show();\u000a                                    });\u000a                            }\u000a\u000a                        });\u000a\u000a                        // The form is invalid, add a shake animation to inform the user\u000a                        $(dialog.$addEditDialog).addClass('shake');\u000a                        // set a timeout so the dialog stops shaking\u000a                        setTimeout(function () {\u000a                            $(dialog.$addEditDialog).removeClass('shake');\u000a                        }, 500);\u000a                    }\u000a\u000a                });\u000a            });\u000a            // Open the add/edit profile dialog\u000a            dialog.$addEditDialog.modal();\u000a        };\u000a\u000a\u000a\u000a    };\u000a    // Bind the settings view model to the plugin settings element\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        Octolapse.SettingsViewModel\u000a        , ["settingsViewModel", "loginStateViewModel"]\u000a        , ["#octolapse_plugin_settings", "#octolapse_settings_nav", "#octolapse_about_tab"]\u000a    ]);\u000a\u000a\u000a});\u000a\u000a\u000a\u000a\u000a\u000a\u000a;\u000a
p0
.