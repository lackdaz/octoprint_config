V// source: plugin/octolapse/js/octolapse.profiles.debug.js\u000a/*\u000a##################################################################################\u000a# Octolapse - A plugin for OctoPrint used for making stabilized timelapse videos.\u000a# Copyright (C) 2017  Brad Hochgesang\u000a##################################################################################\u000a# This program is free software: you can redistribute it and/or modify\u000a# it under the terms of the GNU Affero General Public License as published\u000a# by the Free Software Foundation, either version 3 of the License, or\u000a# (at your option) any later version.\u000a#\u000a# This program is distributed in the hope that it will be useful,\u000a# but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\u000a# GNU Affero General Public License for more details.\u000a#\u000a# You should have received a copy of the GNU Affero General Public License\u000a# along with this program.  If not, see the following:\u000a# https://github.com/FormerLurker/Octolapse/blob/master/LICENSE\u000a#\u000a# You can contact the author either through the git-hub repository, or at the\u000a# following email address: FormerLurker@pm.me\u000a##################################################################################\u000a*/\u000a$(function() {\u000a    Octolapse.DebugProfileViewModel = function (values) {\u000a        var self = this;\u000a        self.profileTypeName = ko.observable("Debug")\u000a        self.guid = ko.observable(values.guid);\u000a        self.name = ko.observable(values.name);\u000a        self.description = ko.observable(values.description);\u000a        self.enabled = ko.observable(values.enabled);\u000a        self.is_test_mode = ko.observable(values.is_test_mode);\u000a        self.log_to_console = ko.observable(values.log_to_console);\u000a        self.position_change = ko.observable(values.position_change);\u000a        self.position_command_received = ko.observable(values.position_command_received);\u000a        self.extruder_change = ko.observable(values.extruder_change);\u000a        self.extruder_triggered = ko.observable(values.extruder_triggered);\u000a        self.trigger_create = ko.observable(values.trigger_create);\u000a        self.trigger_wait_state = ko.observable(values.trigger_wait_state);\u000a        self.trigger_triggering = ko.observable(values.trigger_triggering);\u000a        self.trigger_triggering_state = ko.observable(values.trigger_triggering_state);\u000a        self.trigger_layer_change = ko.observable(values.trigger_layer_change);\u000a        self.trigger_height_change = ko.observable(values.trigger_height_change);\u000a        self.trigger_zhop = ko.observable(values.trigger_zhop);\u000a        self.trigger_time_unpaused = ko.observable(values.trigger_time_unpaused);\u000a        self.trigger_time_remaining = ko.observable(values.trigger_time_remaining);\u000a        self.snapshot_gcode = ko.observable(values.snapshot_gcode);\u000a        self.snapshot_gcode_endcommand = ko.observable(values.snapshot_gcode_endcommand);\u000a        self.snapshot_position = ko.observable(values.snapshot_position);\u000a        self.snapshot_position_return = ko.observable(values.snapshot_position_return);\u000a        self.snapshot_position_resume_print = ko.observable(values.snapshot_position_resume_print);\u000a        self.snapshot_save = ko.observable(values.snapshot_save);\u000a        self.snapshot_download = ko.observable(values.snapshot_download);\u000a        self.render_start = ko.observable(values.render_start);\u000a        self.render_complete = ko.observable(values.render_complete);\u000a        self.render_fail = ko.observable(values.render_fail);\u000a        self.render_sync = ko.observable(values.render_sync);\u000a        self.snapshot_clean = ko.observable(values.snapshot_clean);\u000a        self.settings_save = ko.observable(values.settings_save);\u000a        self.settings_load = ko.observable(values.settings_load);\u000a        self.print_state_changed = ko.observable(values.print_state_changed);\u000a        self.camera_settings_apply = ko.observable(values.camera_settings_apply);\u000a        self.gcode_sent_all = ko.observable(values.gcode_sent_all);\u000a        self.gcode_queuing_all = ko.observable(values.gcode_queuing_all);\u000a        self.gcode_received_all = ko.observable(values.gcode_received_all);\u000a\u000a    };\u000a    Octolapse.DebugProfileValidationRules = {\u000a        rules: {\u000a            name: "required"\u000a        },\u000a        messages: {\u000a            name: "Please enter a name for your profile"\u000a        }\u000a    };\u000a});\u000a\u000a\u000a\u000a;\u000a
p0
.